#!/bin/bash


function run_test()
{
    local test_name="$1"

    log_dir="$log_base_dir/$(basename "$testsuite")/$(basename "$test_name")"
    mkdir -p "$log_dir"
	tmpdir=$(mktemp -d -t pipefs_test.XXXXXXXX)
	pushd "$tmpdir" >/dev/null
    echo "  Running test $test_name"
    (
        if ! source "$test_dir/$test_name"; then
	    echo "    Test case not found."
	    exit 1
	fi

        set +e
        set -x
        (
            set -e
            test_init
            test_run
        )
        result=$?
        test_cleanup && exit $result
        exit $?
    ) 2>"$log_dir/stderr.log"
    result=$?
	popd >/dev/null
	rm -rf "$tmpdir"
    if [ $result -eq 0 ]; then
        echo -e '    \e[0;32mTest successful.\e[0m'
    else
        echo -e '    \e[0;31mTest failed.\e[0m'
    fi
    return $result
}

function full_path()
{
    cd "$(dirname "$1")"
    echo "$PWD/$(basename "$1")"
}

set -e

binary_name="$(full_path "$1")"
test_file="$(full_path "$2")"

if [ ! -x "$binary_name" ]; then
    echo "Invalid binary: $binary_name" >&2
    exit 1
fi
if [ ! -e "$test_file" ]; then
    echo "Invalid test file: $test_file" >&2
    exit 1
fi

test_dir="$(full_path "$(dirname "$0")")"
log_base_dir="$test_dir/logs/$(date '+%Y%m%d_%H%M%S%N')"

source "$test_dir/test_fw.sh"
source "$test_dir/test_common.sh"
source "$test_file"

fail_num=0
run_num=0
while read testsuite; do
    echo "Running test suite $(basename $testsuite)"
    if ! source "$test_dir/$testsuite"; then
	echo "Test suite not found."
	(( ++fail_num ))
        (( ++run_num ))
	continue
    fi

    while read test; do
        if ! run_test "$test"; then
            (( ++fail_num ))
        fi
        (( ++run_num ))
    done < <(get_test_cases)
done < <(get_test_suites)

echo "$fail_num out of $run_num failed."

if [ $fail_num == 0 ]; then
    exit 0
else
    exit 1
fi

